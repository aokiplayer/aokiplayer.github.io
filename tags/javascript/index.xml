<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JavaScript :: タグ :: Yagamo Style</title>
    <link>https://yagamo-style.com/tags/javascript/index.html</link>
    <description></description>
    <generator>Hugo</generator>
    <language>ja-JP</language>
    <lastBuildDate>Wed, 24 Jan 2024 09:00:00 +0900</lastBuildDate>
    <atom:link href="https://yagamo-style.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript の &amp;&amp; 演算子は true/false を返すとは限らない</title>
      <link>https://yagamo-style.com/2024/js-logical-and/index.html</link>
      <pubDate>Wed, 24 Jan 2024 09:00:00 +0900</pubDate>
      <guid>https://yagamo-style.com/2024/js-logical-and/index.html</guid>
      <description>はじめに React Hook Form のサンプルを見ていたら、こんなコードがありました。&#xA;というか、React 本家のチュートリアルにもありますね。 https://ja.react.dev/learn/conditional-rendering#logical-and-operator-&#xA;{errors.exampleRequired &amp;&amp; &lt;span&gt;This field is required&lt;/span&gt;} 普段 JavaScript を書かない立場としては、すぐには理解できませんでした。 入力チェックの結果、エラーがある場合ならこういう挙動のはず。&#xA;errors.exampleRequired に何らかのオブジェクトが入っている true と評価される 右オペランドが評価される 右オペランドが true と評価されれば、true が返される 右オペランドが false と評価されれば、false が返される 入力チェックの結果、エラーがない場合ならこうなるよね？&#xA;errors.exampleRequired が undefined false と評価される 右オペランドを評価せず、false が返される どちらにせよ、true/false のいずれかが返されるので &lt;span&gt;This field is required&lt;/span&gt; は出力されないように思えます。 正しく動作させるなら、普通に考えればこうなるかなと。&#xA;{errors.exampleRequired ? &lt;span&gt;This field is required&lt;/span&gt; : &#39;&#39;} JavaScript の &amp;&amp; 演算子が Java などと比べて特殊なので、確認してみます。&#xA;&amp;&amp; 演算子の基本 JavaScript も C 言語の流れを汲んでいる（基本的な文法の面では）ので、基本的には同じです。&#xA;AND（論理積）を求める ショートカット演算子なので、左オペランドを評価して式全体の結果が確定すれば、右オペランドは評価しない const t1 = true; const t2 = true; const f1 = false; const f2 = false; t1 &amp;&amp; t2 // true t1 &amp;&amp; f2 // false f1 &amp;&amp; t1 // false, f1 を評価した時点で全体の結果が確定するので t1 は評価されない ちょっと変わった使い方 MDN を見ると、以下のような説明があります。</description>
    </item>
  </channel>
</rss>